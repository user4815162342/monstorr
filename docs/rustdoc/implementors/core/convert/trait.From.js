(function() {var implementors = {};
implementors["monstorr_lib"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"monstorr_lib/errors/struct.TokenErrorDetails.html\" title=\"struct monstorr_lib::errors::TokenErrorDetails\">TokenErrorDetails</a>&gt; for <a class=\"struct\" href=\"monstorr_lib/errors/struct.InterpolationErrorDetails.html\" title=\"struct monstorr_lib::errors::InterpolationErrorDetails\">InterpolationErrorDetails</a>","synthetic":false,"types":["monstorr_lib::errors::InterpolationErrorDetails"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'_ <a class=\"struct\" href=\"monstorr_lib/errors/struct.TokenErrorDetails.html\" title=\"struct monstorr_lib::errors::TokenErrorDetails\">TokenErrorDetails</a>&gt; for <a class=\"struct\" href=\"monstorr_lib/errors/struct.InterpolationErrorDetails.html\" title=\"struct monstorr_lib::errors::InterpolationErrorDetails\">InterpolationErrorDetails</a>","synthetic":false,"types":["monstorr_lib::errors::InterpolationErrorDetails"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.61.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"monstorr_lib/errors/enum.IncludeError.html\" title=\"enum monstorr_lib::errors::IncludeError\">IncludeError</a>","synthetic":false,"types":["monstorr_lib::errors::IncludeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"monstorr_lib/errors/struct.InterpolationErrorDetails.html\" title=\"struct monstorr_lib::errors::InterpolationErrorDetails\">InterpolationErrorDetails</a>&gt; for <a class=\"enum\" href=\"monstorr_lib/errors/enum.IncludeError.html\" title=\"enum monstorr_lib::errors::IncludeError\">IncludeError</a>","synthetic":false,"types":["monstorr_lib::errors::IncludeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ron/0.7.0/ron/error/struct.Error.html\" title=\"struct ron::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"monstorr_lib/errors/enum.IncludeError.html\" title=\"enum monstorr_lib::errors::IncludeError\">IncludeError</a>","synthetic":false,"types":["monstorr_lib::errors::IncludeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"monstorr_lib/errors/enum.CreatureError.html\" title=\"enum monstorr_lib::errors::CreatureError\">CreatureError</a>&gt; for <a class=\"enum\" href=\"monstorr_lib/errors/enum.IncludeError.html\" title=\"enum monstorr_lib::errors::IncludeError\">IncludeError</a>","synthetic":false,"types":["monstorr_lib::errors::IncludeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"monstorr_lib/dice/enum.Die.html\" title=\"enum monstorr_lib::dice::Die\">Die</a>&gt; for <a class=\"struct\" href=\"monstorr_lib/dice/struct.Dice.html\" title=\"struct monstorr_lib::dice::Dice\">Dice</a>","synthetic":false,"types":["monstorr_lib::dice::Dice"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"monstorr_lib/errors/enum.TokenError.html\" title=\"enum monstorr_lib::errors::TokenError\">TokenError</a>&gt; for <a class=\"enum\" href=\"monstorr_lib/dice_expression/enum.ParseDiceExpressionError.html\" title=\"enum monstorr_lib::dice_expression::ParseDiceExpressionError\">ParseDiceExpressionError</a>","synthetic":false,"types":["monstorr_lib::dice_expression::ParseDiceExpressionError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"monstorr_lib/dice/struct.Dice.html\" title=\"struct monstorr_lib::dice::Dice\">Dice</a>&gt; for <a class=\"struct\" href=\"monstorr_lib/dice_expression/struct.DiceExpression.html\" title=\"struct monstorr_lib::dice_expression::DiceExpression\">DiceExpression</a>","synthetic":false,"types":["monstorr_lib::dice_expression::DiceExpression"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"monstorr_lib/dice/enum.Die.html\" title=\"enum monstorr_lib::dice::Die\">Die</a>&gt; for <a class=\"struct\" href=\"monstorr_lib/dice_expression/struct.DiceExpression.html\" title=\"struct monstorr_lib::dice_expression::DiceExpression\">DiceExpression</a>","synthetic":false,"types":["monstorr_lib::dice_expression::DiceExpression"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()